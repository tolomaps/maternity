function initialize(){setMap()}function setMap(){function e(e,t,a){for(var n=a.objects.countries.geometries,i=0;i<t.length;i++)for(var s=t[i],l=s.CountryCode,c=0;c<n.length;c++)if(n[c].properties.code3==l){for(var p in keyArray)if("MaternalLeave"==keyArray[p]||"PaternalLeave"==keyArray[p]){var d=keyArray[p],u=s[d];n[c].properties[d]=u}else{var d=keyArray[p],u=Math.round(parseFloat(s[d]));n[c].properties[d]=u}break}var a=r.selectAll(".countries").data(topojson.feature(a,a.objects.countries).features).enter().append("path").attr("class",function(e){return"countries "+e.properties.code3}).attr("d",function(e){return o(e)}).style("fill",function(){return"#bbb"}).style("stroke",function(){return"#888"})}{var t=1200,a=600,r=d3.select("body").append("svg").attr("width",t).attr("height",a).attr("class","map"),n=d3.geo.naturalEarth().scale(150).translate([t/2,a/2]).precision(.1),o=d3.geo.path().projection(n),i=d3.geo.graticule().step([20,20]);r.append("path").datum(i.outline).attr("class","gratBackground").attr("d",o),r.selectAll(".gratLines").data(i.lines).enter().append("path").attr("class","gratLines").attr("d",o)}queue().defer(d3.csv,"data/maternityData.csv").defer(d3.json,"data/countries.topojson").await(e)}var keyArray=["MaternalLeave","PaternalLeave","MaternalDeath","FemaleLaborForceTotal","FemaleLaborForceParticipationRate","FertilityRate"],currentVariable=keyArray[0],jsonCountries;window.onload=initialize();